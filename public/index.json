[{"content":"With the influx of people wanting to set up their own seedboxes without being bothered by their ISPs, there\u0026rsquo;s a growing need for them to consider setting their servers for themselves. This guide will tackle the basics, starting on how to use the terminal on Windows, choosing a hoster and installing (and learning) Swizzin.\nPart 1: Setting up Windows #Step 1: Installing a good terminal #Using Command Prompt is outdated, boring and ugly. Powershell is no better. Time to update. For this, Windows Terminal will be installed and used. You can either get it for free on the Microsoft Store or install it with an alternative method. Cmder, Tabby are good alternatives, but we\u0026rsquo;re going with the easiest option.\nWhy not PuTTY, KiTTY or insert SSH client here? #If you\u0026rsquo;re reading this guide I\u0026rsquo;m having in consideration that you don\u0026rsquo;t have extensive knowledge in setting up a Linux server. To learn this, you need to learn to work in a full fledged terminal, instead of having a program do the first part for you.\nStep 2: Installing Git for Windows #cmd sucks, Powershell sucks, Cygwin is stagnant. We\u0026rsquo;ll install Git for Windows, which includes BASH emulation built in, to help familiarize yourself sooner with Linux\u0026rsquo;s bash.\nGet the 64-bit version of Git for Windows here. When installing, remember to check the \u0026ldquo;(NEW!) Add a Git Bash Profile to Windows Terminal\u0026rdquo; option in the Select Components part. To make your life easier, in Choosing the default editor used by Git, scroll up the list and select \u0026ldquo;nano\u0026rdquo;. No need to change anything else in the installation process.\nOpen Windows Terminal and you should see a Git option when you click the arrow next to the new tab button. You will be using this option starting from this point until the end of the tutorial. You can also open settings (CTRL + , or Downwards arrow \u0026gt; Settings) and select Git as default profile. Remember to click Save at the end. Close your terminal and open another, you are set.\nPart 2: Getting a SSH key #We\u0026rsquo;re going to create a key that\u0026rsquo;s going to replace password login. Open a new terminal window and paste the following command, replacing your-key-filename with the name you actually want.\nssh-keygen -t ed25519 -f ~/.ssh/your-key-filename It will ask you for a passphrase, you can either input your password here (hopefully you\u0026rsquo;ll have a good passphrase) or leave it blank (not recommended) by pressing enter twice.\nAfter you\u0026rsquo;re done, if you check the .ssh folder (It\u0026rsquo;s in your user folder, you might have to enable \u0026ldquo;View Hidden Folders\u0026rdquo;) you\u0026rsquo;ll see two files, one named like your key and one named the same, but with .pub at the end. The first one is your private key, do not ever share it with someone else, your VPS provider will never ask you for it! The second one is your public key, this one is the one that you will send over to your server.\nPart 3: Choosing a server provider #You\u0026rsquo;ll hopefully choose a server provider that will provide\nA IPv4 address for you (IPv4 NAT is fine, but you\u0026rsquo;ll have to set up a domain for it) Both SDD and HDD, with HDD space being at least 500GB (Pure HDD space is honestly fine, too) At least 1GB of RAM Will let you seed from public / private trackers (it\u0026rsquo;s better to open a ticket and ask directly) I\u0026rsquo;ve been using Hostbrr\u0026rsquo;s Hybrid Storage VPS for almost a year, and it works perfectly for my usage. You can check their various offerings here (here, without affiliate code), or ask whether their custom offer is still available (I\u0026rsquo;m using this): 2 vCore AMD EPYC 7502 30 GB NVMe 2 TB HDD 6 TB Bandwidth @ 1Gbps IPv4+IPv6 Helsinki, Finland $5.5/month As an alternative, ServaRica has their Polar Bear Storage offer (link, no aff) with:\n2 cores Shared 2GB RAM 2TB HDD Unlimited bandwidth @ 250Mbps + 1Mbps daily increase, limit 1Gbps OR 12TB Bandwidth @ 1Gbps IPv4 + IPv6 (on request) Montreal, Canada $5/month Part 4: Setting up and securing your server #Picking an OS #I personally use Ubuntu 22.04 for everything. I recommend you to do so, too.\nMaking sure you can log in #In a new terminal window, write the following, replacing root in case your hoster gives you a different user (like ubuntu or debian or user) and replacing your_server_ip with your server IP address.\nImportant 22 is the default port for SSH. If you picked a server with IPv4 NAT (shared IP), this might be different, so make sure to change 22 to whatever was selected for you ssh root@your_server_ip -p 22 If it tells you \u0026ldquo;The authenticity of host [\u0026hellip;] can\u0026rsquo;t be established\u0026rdquo;, it\u0026rsquo;s safe to write \u0026ldquo;yes\u0026rdquo;. You should now be inside your server.\nCreating a new user and adding it to sudoers #It\u0026rsquo;s always a good idea to move from the default user to a new one created by yourself. In your terminal window, paste the following, changing \u0026ldquo;ignacio\u0026rdquo; to whatever user you want\nImportant If you\u0026rsquo;re on the user \u0026ldquo;root\u0026rdquo;, you will get the error \u0026ldquo;sudo: command not found\u0026rdquo;, remember to remove \u0026ldquo;sudo\u0026rdquo; on this step\u0026rsquo;s commands sudo adduser ignacio Type your (secure) password twice, and fill out the info (or press enter multiple times to leave blank), then type \u0026ldquo;Y\u0026rdquo; to accept. Now, you need to add this new user to the sudo group, giving it admin permissions basically\nsudo usermod -aG sudo ignacio To check whether it was successfully added, do the following command\nsudo groups ignacio and you should see something similar to this: ignacio : ignacio sudo\nMaking sure you can log in as your new user #Send the command exit on your terminal (or close it and open it back again) and do the same SSH login command, but changing root to your newly created username\nssh ignacio@your_server_ip -p 22 Provide the password, and if successful, you should\u0026rsquo;ve logged back in, this time with your new user. Cool!\nSending your public key over to your server #Logging with a password is old and prone to password dictionary attacks, we will send your public key over to your server, as the first step of disabling password logins altogether.\nIn a new terminal window, do the following command. Remember to replace ignacio with your actual user!\nssh-copy-id -i ~/.ssh/your-key-filename.pub -p 22 ignacio@your_server_ip It will ask you for your password, provide it. If successful, you\u0026rsquo;ll see the following\nNumber of key(s) added: 1 Now try logging into the machine, with: \u0026#34;ssh \u0026#39;ignacio@your_server_ip\u0026#39;\u0026#34; and check to make sure that only the key(s) you wanted were added. Cool! Let\u0026rsquo;s log in with your keyfile now\nssh ignacio@your_server_ip -p 22 -i ~/.ssh/your-key-filename Provide your keyfile passphrase / password (in case you used one) and you should\u0026rsquo;ve logged in the server without using your actual user\u0026rsquo;s password.\nEnabling firewall with UFW #Check UFW status with sudo ufw status, should reply with Status: inactive. Before enabling, let\u0026rsquo;s make sure we don\u0026rsquo;t lock ourselves from accessing, so we need to allow port 22 (or your SSH port) to be open.\nsudo ufw allow 22 The response to that should be Rules updated and Rules updated (v6). Now we can enable the firewall with\nsudo ufw enable Accept the SSH disruption warning by typing \u0026ldquo;y\u0026rdquo; and pressing enter. Now, sudo ufw status should show allow rules to port 22.\nChanging your SSH port to a random one #Yes, we just allowed port 22 through our firewall, but changing the port to a less obvious one will reduce attempted logins by bots to nearly zero, and multiple failed attempts can make a less resource-heavy machines slower.\nImportant If you\u0026rsquo;re on IPv4 NAT or you had a different SSH port to begin with, you can skip this section. Pick a random port, for this example I will be using port 566. Allow traffic through port 566 on UFW\nsudo ufw allow 566 Now change SSH port to your chosen one with this one-liner, remember to change 566 to your preferred port\nsudo sed -i \u0026#39;s/#Port 22/Port 566/\u0026#39; /etc/ssh/sshd_config And restart the SSH service\nsudo systemctl restart sshd In case you want to check, do nano /etc/ssh/sshd_config and it should look similar to this\n# This is the sshd server system-wide configuration file. See # sshd_config(5) for more information. # This sshd was compiled with PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games # The strategy used for options in the default sshd_config shipped with # OpenSSH is to specify options with their default value where # possible, but leave them commented. Uncommented options override the # default value. Include /etc/ssh/sshd_config.d/*.conf Port 566 #AddressFamily any #ListenAddress 0.0.0.0 #ListenAddress :: (...) Open a new window and check if you can log in with your new port instead of the default one\nssh ignacio@your_server_ip -p 566 -i ~/.ssh/your-key-filename If you were successful, you can now deny the default SSH port with\nsudo ufw deny 22 Disabling password logins and root logins #First copy and paste this command that will disable logging in as root\nsudo sed -i \u0026#39;s/PermitRootLogin yes/PermitRootLogin no/\u0026#39; /etc/ssh/sshd_config Then copy and paste this command that will disable logging in with a password, hence only allowing to log in with the correct keyfile\nsudo sed -i \u0026#39;s/#PasswordAuthentication yes/PasswordAuthentication no/\u0026#39; /etc/ssh/sshd_config Once again, restart the SSH service\nsudo systemctl restart sshd Now, root login is disabled and you will only be able to log in with your keyfile.\nCreating a SSH alias in your home device #Your SSH login command is getting insanely long. We can set up a file named \u0026ldquo;config\u0026rdquo; inside ~/.ssh in your machine, adding all those extra commands to an alias that will make it way easier.\nCreate a blank file on .ssh/ inside your user folder named \u0026ldquo;config\u0026rdquo;, and paste the following, replacing \u0026ldquo;seedbox\u0026rdquo; with whatever alias you want, \u0026ldquo;ignacio\u0026rdquo; with your chosen user, 566 with the SSH port you chose and \u0026ldquo;your-key-filename\u0026rdquo; with the name of your private key.\nHost * ServerAliveInterval 40 Host seedbox HostName your_server_ip User ignacio Port 566 IdentityFile ~/.ssh/your-key-filename Save it, close your terminal and open a new one. Instead of doing the whole SSH command with your user, IP, port and keyfile, simply do:\nssh seedbox and you will be logged in.\nEnabling fail2ban and setting it up to the extreme #fail2ban is a handy program that will keep a list of IPs who failed to log in. You can customize it to a T, from how many tries to how many ban minutes / hours, etc. Since we already have everything set up to log in with a simple command, we\u0026rsquo;ll set up fail2ban to\nBan anyone who tries to log in as root permanently Ban anyone who doesn\u0026rsquo;t provide a keyfile permanently Ban anyone who provides the wrong keyfile for 24 hours Update your system package list\nsudo apt-get update Upgrade any outdated package. If you get a pink screen asking you which services you want to restart, just press enter.\nsudo apt-get dist-upgrade Install fail2ban\nsudo apt-get install fail2ban Create a new file with nano named jail.local\nsudo nano /etc/fail2ban/jail.local Paste the following, remember to change 566 to your actual SSH port\n[sshd] enabled = true port = 566 filter = sshd logpath = /var/log/auth.log maxretry = 1 bantime = -1 [sshd-root] enabled = true port = 566 filter = sshd[mode=aggressive] logpath = /var/log/auth.log maxretry = 1 bantime = -1 [sshd-nokeyfile] enabled = true port = 566 filter = sshd-nokeyfile logpath = /var/log/auth.log maxretry = 1 bantime = -1 [sshd-wrongkeyfile] enabled = true port = 566 filter = sshd-wrongkeyfile logpath = /var/log/auth.log maxretry = 1 bantime = 86400 To save, press CTRL + X, press Y and then press enter. Create the following filter by doing sudo nano /etc/fail2ban/filter.d/sshd-nokeyfile.conf and paste the contents:\n[Definition] failregex = ^.*Did not receive identification string from \u0026lt;HOST\u0026gt;$ ignoreregex = Save, and create the last filter by doing sudo nano /etc/fail2ban/filter.d/sshd-wrongkeyfile.conf and paste the following:\n[Definition] failregex = ^.*error: Authentication failed for .* from \u0026lt;HOST\u0026gt;$ ignoreregex = Save, then start and enable fail2ban\nsudo systemctl start fail2ban sudo systemctl enable fail2ban To check the status of all jails (to check an individual jail, put the name of the jail after \u0026ldquo;status\u0026rdquo;)\nsudo fail2ban-client status To unban an IP\nsudo fail2ban-client unban \u0026lt;IP_ADDRESS\u0026gt; Enabling auto-updates #Install these packages\nsudo apt-get install unattended-upgrades update-notifier-common Enable auto-updates (On the pink screen, make sure \u0026ldquo;Yes\u0026rdquo; is selected and press enter)\nsudo dpkg-reconfigure --priority=low unattended-upgrades Do sudo nano /etc/apt/apt.conf.d/50unattended-upgrades and make sure it looks like this\n// Automatically upgrade packages from these (origin:archive) pairs // // Note that in Ubuntu security updates may pull in new dependencies // from non-security sources (e.g. chromium). By allowing the release // pocket these get automatically pulled in. Unattended-Upgrade::Allowed-Origins { \u0026#34;${distro_id}:${distro_codename}\u0026#34;; \u0026#34;${distro_id}:${distro_codename}-security\u0026#34;; // Extended Security Maintenance; doesn\u0026#39;t necessarily exist for // every release and this system may not have it installed, but if // available, the policy for updates is such that unattended-upgrades // should also install from here by default. \u0026#34;${distro_id}ESMApps:${distro_codename}-apps-security\u0026#34;; \u0026#34;${distro_id}ESM:${distro_codename}-infra-security\u0026#34;; // \u0026#34;${distro_id}:${distro_codename}-updates\u0026#34;; // \u0026#34;${distro_id}:${distro_codename}-proposed\u0026#34;; // \u0026#34;${distro_id}:${distro_codename}-backports\u0026#34;; }; Also, check sudo nano /etc/apt/apt.conf.d/20auto-upgrades, make sure it has these lines\nAPT::Periodic::Update-Package-Lists \u0026#34;1\u0026#34;; APT::Periodic::Unattended-Upgrade \u0026#34;1\u0026#34;; Enable and start the service\nsudo systemctl enable unattended-upgrades sudo systemctl start unattended-upgrades Part 5: Holy fuck, can we install Swizzin yet? #Installing Swizzin #Enable access to ports 80 (HTTP) and 443 (HTTPS)\nsudo ufw allow 80 \u0026amp;\u0026amp; sudo ufw allow 443 Switch to root\nsudo -i Run the Swizzin installation wizard\nbash \u0026lt;(curl -sL s5n.sh) \u0026amp;\u0026amp; . ~/.bashrc Press \u0026ldquo;Yes\u0026rdquo; once it tells you to set up, then input your username. You will get a notice like this:\nINFO The user ignacio already appears to be present on this machine; however, it does not appear to be configured as a swizzin user. The user will be added to swizzin. INPUT Continue setting up user? (Y/n) \u0026gt; Input \u0026ldquo;Y\u0026rdquo; and press enter to confirm. On password, re-type the password you already set up for your user.\nOn \u0026ldquo;Install software\u0026rdquo;, select the following (Move with up/down arrows, select with spacebar)\nnginx qBittorrent (You can select deluge or rtorrent, though) panel Press the TAB button to select \u0026lt;Ok\u0026gt; and press ENTER. On the \u0026ldquo;Make some more choices\u0026rdquo; screen, scroll down and select letsencrypt. Anything else can be installed later. Again, TAB, select \u0026lt;Ok\u0026gt; and press ENTER.\nSelect your preferred qBittorrent version. I\u0026rsquo;ll pick 4.6 because I use RSS feeds. TAB and continue. This will start installing all your selected applications. In lower RAM servers, there might be some parts where it looks like everything\u0026rsquo;s frozen. Do not worry, just leave it and let it load until it finishes.\nWhile it finishes, let\u0026rsquo;s continue with the following step\nSetting up your domain with Cloudflare #We will use Cloudflare for this. Domains are cheap for the first year, but if you don\u0026rsquo;t want to spend any money, Afraid\u0026rsquo;s FreeDNS, DuckDNS, deSEC or eu.org are free alternatives to get a subdomain.\nFirst thing in Cloudflare: Select your domain, go to SSL/TLS \u0026gt; Overview \u0026gt; Configure and switch Custom SSL/TLS to \u0026ldquo;Full\u0026rdquo;. Now, in DNS \u0026gt; Records \u0026gt; Add Record:\nSelect type A In name, if you want to use a subdomain (tee.yourdomain.com), then write \u0026ldquo;tee\u0026rdquo;. If you want to use the full domain just put @ IPV4 Address: Your seedbox IP Proxy status: Leave as Proxied (Orange cloud) Then click \u0026ldquo;Save\u0026rdquo;.\nLastly, on the top right, select the profile icon \u0026gt; My Profile, select API Tokens (Or click here), scroll down and click \u0026ldquo;View\u0026rdquo; on Global API Key, copy it; you will use it now.\nSetting up your domain in your server #Go back to your terminal, you should see the following:\nSUCCESS Panel installed INFO Installing letsencrypt DOCS Further reference: https://swizzin.ltd/applications/letsencrypt INPUT Enter domain name to secure with LE Enter your domain (or subdomain), when asked \u0026ldquo;Do you want to apply this certificate to your swizzin default conf?\u0026rdquo; type \u0026ldquo;y\u0026rdquo;. Same with \u0026ldquo;Is your DNS managed by CloudFlare?\u0026rdquo; and \u0026ldquo;Does the record for this subdomain already exist?\u0026rdquo;. When asked for your CF API key, paste the global api key you copied early, then input your Cloudflare account email.\nFinally, you\u0026rsquo;ll see this on your screen\n% Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 2297 0 2297 0 0 7098 0 --:--:-- --:--:-- --:--:-- 7089 ... Performing apt update ✔ Done ... Performing installation of 1 apt packages (socat) ✔ Apt install complete ... Installing ACME script % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 1032 0 1032 0 0 7709 0 --:--:-- --:--:-- --:--:-- 7701 ✔ Done ... Registering certificates ✔ Certificate acquired ... Installing certificate [Sun 8 Sep 05:47:14 UTC 2024] The domain \u0026#34;tee.yourdomain.com\u0026#34; seems to already have an ECC cert, let\\\u0026#39;s use it. [Sun 8 Sep 05:47:14 UTC 2024] Installing CA to: /etc/nginx/ssl/tee.yourdomain.com/chain.pem [Sun 8 Sep 05:47:14 UTC 2024] Installing key to: /etc/nginx/ssl/tee.yourdomain.com/key.pem [Sun 8 Sep 05:47:14 UTC 2024] Installing full chain to: /etc/nginx/ssl/tee.yourdomain.com/fullchain.pem [Sun 8 Sep 05:47:14 UTC 2024] Running reload cmd: systemctl reload nginx [Sun 8 Sep 05:47:14 UTC 2024] Reload successful ✔ Certificate installed SUCCESS Letsencrypt installed INFO Package installation took 129 minutes and 16 seconds SUCCESS Swizzin installation complete! INFO Seedbox can be accessed at https://server.ip INFO You can now use the box command to manage swizzin features, e.g. `box install nginx panel` DOCS Further reference: https://swizzin.ltd/getting-started/box-basics INFO Shell completions for the box command have been installed. They will be applied the next time you log into a bash shell ... Executing post-install commands ✔ Post-install commands finished In your browser, open your domain (or subdomain), log in and you should see Swizzin\u0026rsquo;s panel. Remember to exit sudo user by simply typing exit on your terminal and pressing enter.\nOpening up your torrent port #In your panel, select qBittorrent at the left sidebar (or go directly to https://tee.yourdomain.com/qbittorrent), log in with the same info as before. Click on the settings icon (gear icon), select tab \u0026ldquo;Connection\u0026rdquo; and copy the port listed on \u0026ldquo;Port used for incoming connections\u0026rdquo; (or replace it for your preferred one). In my case, my port is 2549.\nScroll down, click \u0026ldquo;Save\u0026rdquo; and on your terminal do\nsudo ufw allow 2549 Check if your port is open with any port checker like Dynu\u0026rsquo;s Port Check, wait until the \u0026ldquo;SUCCESS!\u0026rdquo; message appears. You\u0026rsquo;re done! You now have a working seedbox available to you.\nOptional settings for qBittorrent #Disabling torrent limits #Go to the settings icon \u0026gt; Connection and deselect the following:\nGlobal maximum number of connections Maximum number of connections per torrent Global maximum number of upload slots Maximum number of upload slots per torrent Setting up your seedbox for private tracker usage only #Go to the settings icon \u0026gt; Bittorrent and deselect the following:\nEnable DHT (decentralised network) to find more peers Enable Peer Exchange (PeX) to find more peers Enable Local Peer Discovery to find more peers} General maintenance (Good to do every few days / every week) #Update your package lists #sudo apt-get update Upgrade outdated packages #sudo apt-get dist-upgrade Update Swizzin to the latest release #sudo box update ","date":"September 9, 2024","permalink":"/posts/hosting-a-seedbox-for-dummies/","section":"Posts","summary":"Setting up a private seedbox from the beggining","title":"Hosting a Seedbox for Dummies"},{"content":"","date":null,"permalink":"/","section":"ignacio.uk","summary":"","title":"ignacio.uk"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"Privacy Policy\nEffective Date: September 9th, 2024\nThis Privacy Policy explains how we collect, use, disclose, and safeguard your information when you visit our Site. Please read this Privacy Policy carefully. If you do not agree with the terms of this Privacy Policy, please do not access the Site.\n1. INFORMATION WE COLLECT\nWhen you visit our Site, we automatically collect certain information about your device and your interaction with the Site. This information does not reveal your specific identity (like your name or contact information) but may include:\nDevice and usage information: Your IP address, browser and device characteristics, operating system, language preferences, referring URLs, device name, country, location, information about how and when you use our Site, and other technical information. This information is primarily needed to maintain the security and operation of our Site, and for our internal analytics and reporting purposes. 2. HOW WE USE YOUR INFORMATION\nWe use the information we collect for the following purposes:\nTo protect our Site: We may use your information as part of our efforts to keep our Site safe and secure (for example, for fraud monitoring and prevention). To enforce our terms, conditions, and policies for business purposes, to comply with legal and regulatory requirements, or in connection with our contract. To respond to legal requests and prevent harm: If we receive a subpoena or other legal request, we may need to inspect the data we hold to determine how to respond. For analytics and reporting: We use aggregated information from our server logs to analyze Site usage and improve the user experience. For advertising purposes: We may use the information we collect to display advertisements to you on our Site. 3. SHARING YOUR INFORMATION\nWe may share your personal information with the following categories of third parties:\nAdvertisers and advertising networks that require the data to select and serve relevant adverts to you and others. Analytics and search engine providers that assist us in the improvement and optimization of our Site. 4. USE OF COOKIES AND OTHER TRACKING TECHNOLOGIES\nWe may use cookies and similar tracking technologies (like web beacons and pixels) to access or store information. Specific information about how we use such technologies and how you can refuse certain cookies is set out in our Cookie Policy.\n5. YOUR PRIVACY RIGHTS\nIf you would like to review, change, or request deletion of the information we have collected about you, please contact us using the contact information provided below.\n6. CONTROLS FOR DO-NOT-TRACK FEATURES\nMost web browsers and some mobile operating systems and mobile applications include a Do-Not-Track (\u0026ldquo;DNT\u0026rdquo;) feature or setting you can activate to signal your privacy preference not to have data about your online browsing activities monitored and collected. No uniform technology standard for recognizing and implementing DNT signals has been finalized. As such, we do not currently respond to DNT browser signals or any other mechanism that automatically communicates your choice not to be tracked online.\n7. UPDATES TO THIS POLICY\nWe may update this Privacy Policy from time to time. The updated version will be indicated by an updated \u0026ldquo;Revised\u0026rdquo; date, and the updated version will be effective as soon as it is accessible. If we make material changes to this Privacy Policy, we may notify you either by prominently posting a notice of such changes or by directly sending you a notification. We encourage you to review this Privacy Policy frequently to be informed of how we are protecting your information.\n8. CONTACT US\nIf you have questions or comments about this Privacy Policy, please contact us at:\nhola@ignacio.lol\nLast Updated: September 9th, 2024\nCOOKIE POLICY\nOur Site uses cookies and similar technologies to distinguish you from other users of our Site. This helps us to provide you with a good experience when you browse our Site and also allows us to improve our Site.\nA cookie is a small file of letters and numbers that we store on your browser or the hard drive of your computer if you agree. Cookies contain information that is transferred to your computer\u0026rsquo;s hard drive.\nWe use the following cookies:\nStrictly necessary cookies: These are cookies that are required for the operation of our Site. Analytical/performance cookies: They allow us to recognize and count the number of visitors and to see how visitors move around our Site when they are using it. This helps us to improve the way our Site works, for example, by ensuring that users are finding what they are looking for easily. Functionality cookies: These are used to recognize you when you return to our Site. This enables us to personalize our content for you and remember your preferences. Targeting cookies: These cookies record your visit to our Site, the pages you have visited, and the links you have followed. We will use this information to make our Site and the advertising displayed on it more relevant to your interests. You can block cookies by activating the setting on your browser that allows you to refuse the setting of all or some cookies. However, if you use your browser settings to block all cookies (including essential cookies), you may not be able to access all or parts of our Site.\nLast Updated: September 9th, 2024\n","date":null,"permalink":"/privacy/","section":"ignacio.uk","summary":"Privacy Policy","title":"Privacy Policy"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]